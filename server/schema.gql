# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  """id"""
  _id: String

  """fullName"""
  fullName: String!

  """email"""
  email: String!

  """password"""
  password: String

  """profilePic"""
  profilePic: String

  """isAdmin"""
  isAdmin: Boolean

  """address"""
  address: String

  """createdAt"""
  createdAt: Boolean
}

"""Authenticate response"""
type LoginResponse {
  """The jwt token that contains the authenticated user."""
  jwt: String!
}

type Apartment {
  """id"""
  _id: String

  """houseName"""
  houseName: String!

  """address"""
  address: String!

  """country"""
  country: String!

  """city"""
  city: String!

  """bio"""
  bio: String!

  """totalBed"""
  bedrooms: String!

  """totalBath"""
  bathrooms: String!

  """totalBath"""
  surface: String!

  """totalBath"""
  price: String!

  """totalBath"""
  type: String!
}

"""Find Apartment Response"""
type FindApartmentResponse {
  """Number of Apartments"""
  total: Int!

  """Apartments"""
  apartments: [Apartment!]!
}

type Query {
  getUserDetails: User!
  getApartments(
    """Pagination"""
    pagination: Pagination!

    """country"""
    country: String

    """country"""
    type: APARTMENT_TYPE

    """price range"""
    price: String
  ): FindApartmentResponse!
  apartmentDetails(
    """apartmentId"""
    apartmentId: String!
  ): Apartment!
}

"""Pagination"""
input Pagination {
  page: Float!
  limit: Float!
}

"""The available type of appartment"""
enum APARTMENT_TYPE {
  APARTMENT
  HOUSE
}

type Mutation {
  login(loginRequest: LoginRequest!): LoginResponse!
  registration(registrationRequest: RegistrationDto!): Boolean!
  confirmRegister(pin: Float!): Boolean!
  updateUser(updateUserInput: UpdateUserInput!): Boolean!
}

input LoginRequest {
  """Email of the user"""
  email: String!

  """Password of the user"""
  password: String!
}

input RegistrationDto {
  """Email of the user"""
  email: String!

  """Password of the user"""
  password: String!

  """FullName  of the user"""
  fullName: String!
}

input UpdateUserInput {
  """address"""
  address: String

  """email"""
  email: String

  """fullName"""
  fullName: String
}